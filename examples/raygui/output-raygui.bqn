#### THIS TEXT HAS BEEN AUTOGENERATED ####

# Makes an importer that improves the ffi function creation syntax
MakeImporter ‚áê {debugùïäpathToBin: # Debug is useful for Segmentation Faults
  NestedStructToStr ‚Üê {
    1‚â•‚â°ùï©?ùï©;
    lists‚Äøatoms ‚Üê √ó‚àò‚â°¬®‚ä∏(/ ‚ãà ¬¨‚ä∏/)ùï©
    atoms‚àæ'{'‚àæ'}'¬´‚àæ','‚àæ¬®ùïä¬®lists
  }
  NestedStructToStrRet ‚Üê {
    1‚â•‚â°ùï©?ùï©;
    lists‚Äøatoms ‚Üê √ó‚àò‚â°¬®‚ä∏(/ ‚ãà ¬¨‚ä∏/)ùï©
    atoms‚àæ'{'‚àæ'}'¬´‚àæ','‚àæ¬®ùïä¬®"*"‚çü("*i8:c8"‚ä∏‚â°‚à®"*u8:c8"‚ä∏‚â°)¬®lists
  }

  {ùï® funcName _ùï£ inpTypes: outType‚Üêùï®‚ä£‚ü®‚ü©
    a‚Üê'>'‚ä∏‚àæ‚åæ‚äë‚çü(1=‚â†) NestedStructToStr¬®ùï©
    HandleError ‚Üê {
      ‚Ä¢Out "DEBUG TYPE INFO:"
      ‚Ä¢Out ‚Ä¢Fmt ùï©
      ‚Ä¢Out "END OF DEBUG TYPE INFO; BEGINING WITH FULL ERROR:"
      ‚Ä¢term.Flush@
      ùï®‚Ä¢FFIùï©
    }
    func ‚Üê pathToBin ‚Ä¢FFI‚éäHandleError ‚ü® NestedStructToStrRet outType‚ãÑfuncName‚ü©‚àæa
    m ‚Üê str‚ä∏‚â°¬®a
    IfDebug ‚Üê {‚Ä¢term.Flush@‚ä£‚Ä¢Out funcName ‚ãÑ ùïè‚ä£‚Ä¢term.Flush‚àò@‚ä£‚Ä¢Out‚àòfuncName}
    IfDebug‚çüdebug {ùïè‚àæ‚üú@}‚çü(a‚â°‚ãà'>'‚àæstr) {ùïè‚àæ‚üú@¬®‚åæ(m‚ä∏/)}‚çü(‚à®¬¥m) func
  }
}

# predefined C types
bool ‚áê "i8"
c    ‚áê "i8"
i    ‚áê "i32"
f    ‚áê "f32"
u    ‚áê "u32"
i8   ‚áê "i8"
u8   ‚áê "u8"
str  ‚áê "*i8:c8"
uStr ‚áê "*u8:c8"
ptr  ‚áê "*"

pathToBinary ‚áê ‚äë‚Ä¢args
r ‚áê 0 MakeImporter pathToBinary

##################################
# End of setup for easy ffi.     #
# Begining of autogenerated ffi. #
##################################

rAYGUI_VERSION_MAJOR ‚áê 4     #
rAYGUI_VERSION_MINOR ‚áê 0     #
rAYGUI_VERSION_PATCH ‚áê 0     #
rAYGUI_VERSION       ‚áê "4.0" #
sCROLLBAR_LEFT_SIDE  ‚áê 0     #
sCROLLBAR_RIGHT_SIDE ‚áê 1     #

guiState ‚áê { # Gui control state
  sTATE_NORMAL   ‚áê 0  #
  sTATE_FOCUSED  ‚áê 1  #
  sTATE_PRESSED  ‚áê 2  #
  sTATE_DISABLED ‚áê 3  #
}
guiTextAlignment ‚áê { # Gui control text alignment
  tEXT_ALIGN_LEFT   ‚áê 0  #
  tEXT_ALIGN_CENTER ‚áê 1  #
  tEXT_ALIGN_RIGHT  ‚áê 2  #
}
guiTextAlignmentVertical ‚áê { # Gui control text alignment vertical
  tEXT_ALIGN_TOP    ‚áê 0  #
  tEXT_ALIGN_MIDDLE ‚áê 1  #
  tEXT_ALIGN_BOTTOM ‚áê 2  #
}
guiTextWrapMode ‚áê { # Gui control text wrap mode
  tEXT_WRAP_NONE ‚áê 0  #
  tEXT_WRAP_CHAR ‚áê 1  #
  tEXT_WRAP_WORD ‚áê 2  #
}
guiControl ‚áê { # Gui controls
  dEFAULT     ‚áê 0   #
  lABEL       ‚áê 1   # Used also for: LABELBUTTON
  bUTTON      ‚áê 2   #
  tOGGLE      ‚áê 3   # Used also for: TOGGLEGROUP
  sLIDER      ‚áê 4   # Used also for: SLIDERBAR, TOGGLESLIDER
  pROGRESSBAR ‚áê 5   #
  cHECKBOX    ‚áê 6   #
  cOMBOBOX    ‚áê 7   #
  dROPDOWNBOX ‚áê 8   #
  tEXTBOX     ‚áê 9   # Used also for: TEXTBOXMULTI
  vALUEBOX    ‚áê 10  #
  sPINNER     ‚áê 11  # Uses: BUTTON, VALUEBOX
  lISTVIEW    ‚áê 12  #
  cOLORPICKER ‚áê 13  #
  sCROLLBAR   ‚áê 14  #
  sTATUSBAR   ‚áê 15  #
}
guiControlProperty ‚áê { # Gui base properties for every control
  bORDER_COLOR_NORMAL   ‚áê 0   # Control border color in STATE_NORMAL
  bASE_COLOR_NORMAL     ‚áê 1   # Control base color in STATE_NORMAL
  tEXT_COLOR_NORMAL     ‚áê 2   # Control text color in STATE_NORMAL
  bORDER_COLOR_FOCUSED  ‚áê 3   # Control border color in STATE_FOCUSED
  bASE_COLOR_FOCUSED    ‚áê 4   # Control base color in STATE_FOCUSED
  tEXT_COLOR_FOCUSED    ‚áê 5   # Control text color in STATE_FOCUSED
  bORDER_COLOR_PRESSED  ‚áê 6   # Control border color in STATE_PRESSED
  bASE_COLOR_PRESSED    ‚áê 7   # Control base color in STATE_PRESSED
  tEXT_COLOR_PRESSED    ‚áê 8   # Control text color in STATE_PRESSED
  bORDER_COLOR_DISABLED ‚áê 9   # Control border color in STATE_DISABLED
  bASE_COLOR_DISABLED   ‚áê 10  # Control base color in STATE_DISABLED
  tEXT_COLOR_DISABLED   ‚áê 11  # Control text color in STATE_DISABLED
  bORDER_WIDTH          ‚áê 12  # Control border size, 0 for no border
  tEXT_PADDING          ‚áê 13  # Control text padding, not considering border
  tEXT_ALIGNMENT        ‚áê 14  # Control text horizontal alignment inside control text bound (after border and padding)
}
guiDefaultProperty ‚áê { # DEFAULT extended properties
  tEXT_SIZE               ‚áê 16  # Text size (glyphs max height)
  tEXT_SPACING            ‚áê 17  # Text spacing between glyphs
  lINE_COLOR              ‚áê 18  # Line control color
  bACKGROUND_COLOR        ‚áê 19  # Background color
  tEXT_LINE_SPACING       ‚áê 20  # Text spacing between lines
  tEXT_ALIGNMENT_VERTICAL ‚áê 21  # Text vertical alignment inside text bounds (after border and padding)
  tEXT_WRAP_MODE          ‚áê 22  # Text wrap-mode inside text bounds
}
guiToggleProperty ‚áê { # Toggle/ToggleGroup
  gROUP_PADDING ‚áê 16  # ToggleGroup separation between toggles
}
guiSliderProperty ‚áê { # Slider/SliderBar
  sLIDER_WIDTH   ‚áê 16  # Slider size of internal bar
  sLIDER_PADDING ‚áê 17  # Slider/SliderBar internal bar padding
}
guiProgressBarProperty ‚áê { # ProgressBar
  pROGRESS_PADDING ‚áê 16  # ProgressBar internal padding
}
guiScrollBarProperty ‚áê { # ScrollBar
  aRROWS_SIZE           ‚áê 16  # ScrollBar arrows size
  aRROWS_VISIBLE        ‚áê 17  # ScrollBar arrows visible
  sCROLL_SLIDER_PADDING ‚áê 18  # ScrollBar slider internal padding
  sCROLL_SLIDER_SIZE    ‚áê 19  # ScrollBar slider size
  sCROLL_PADDING        ‚áê 20  # ScrollBar scroll padding from arrows
  sCROLL_SPEED          ‚áê 21  # ScrollBar scrolling speed
}
guiCheckBoxProperty ‚áê { # CheckBox
  cHECK_PADDING ‚áê 16  # CheckBox internal check padding
}
guiComboBoxProperty ‚áê { # ComboBox
  cOMBO_BUTTON_WIDTH   ‚áê 16  # ComboBox right button width
  cOMBO_BUTTON_SPACING ‚áê 17  # ComboBox button separation
}
guiDropdownBoxProperty ‚áê { # DropdownBox
  aRROW_PADDING          ‚áê 16  # DropdownBox arrow separation from border and items
  dROPDOWN_ITEMS_SPACING ‚áê 17  # DropdownBox items separation
}
guiTextBoxProperty ‚áê { # TextBox/TextBoxMulti/ValueBox/Spinner
  tEXT_READONLY ‚áê 16  # TextBox in read-only mode: 0-text editable, 1-text no-editable
}
guiSpinnerProperty ‚áê { # Spinner
  sPIN_BUTTON_WIDTH   ‚áê 16  # Spinner left/right buttons width
  sPIN_BUTTON_SPACING ‚áê 17  # Spinner buttons separation
}
guiListViewProperty ‚áê { # ListView
  lIST_ITEMS_HEIGHT  ‚áê 16  # ListView items height
  lIST_ITEMS_SPACING ‚áê 17  # ListView items separation
  sCROLLBAR_WIDTH    ‚áê 18  # ListView scrollbar size (usually width)
  sCROLLBAR_SIDE     ‚áê 19  # ListView scrollbar side (0-SCROLLBAR_LEFT_SIDE, 1-SCROLLBAR_RIGHT_SIDE)
}
guiColorPickerProperty ‚áê { # ColorPicker
  cOLOR_SELECTOR_SIZE      ‚áê 16  #
  hUEBAR_WIDTH             ‚áê 17  # ColorPicker right hue bar width
  hUEBAR_PADDING           ‚áê 18  # ColorPicker right hue bar separation from panel
  hUEBAR_SELECTOR_HEIGHT   ‚áê 19  # ColorPicker right hue bar selector height
  hUEBAR_SELECTOR_OVERFLOW ‚áê 20  # ColorPicker right hue bar selector overflow
}
guiIconName ‚áê { #
  iCON_NONE                    ‚áê 0    #
  iCON_FOLDER_FILE_OPEN        ‚áê 1    #
  iCON_FILE_SAVE_CLASSIC       ‚áê 2    #
  iCON_FOLDER_OPEN             ‚áê 3    #
  iCON_FOLDER_SAVE             ‚áê 4    #
  iCON_FILE_OPEN               ‚áê 5    #
  iCON_FILE_SAVE               ‚áê 6    #
  iCON_FILE_EXPORT             ‚áê 7    #
  iCON_FILE_ADD                ‚áê 8    #
  iCON_FILE_DELETE             ‚áê 9    #
  iCON_FILETYPE_TEXT           ‚áê 10   #
  iCON_FILETYPE_AUDIO          ‚áê 11   #
  iCON_FILETYPE_IMAGE          ‚áê 12   #
  iCON_FILETYPE_PLAY           ‚áê 13   #
  iCON_FILETYPE_VIDEO          ‚áê 14   #
  iCON_FILETYPE_INFO           ‚áê 15   #
  iCON_FILE_COPY               ‚áê 16   #
  iCON_FILE_CUT                ‚áê 17   #
  iCON_FILE_PASTE              ‚áê 18   #
  iCON_CURSOR_HAND             ‚áê 19   #
  iCON_CURSOR_POINTER          ‚áê 20   #
  iCON_CURSOR_CLASSIC          ‚áê 21   #
  iCON_PENCIL                  ‚áê 22   #
  iCON_PENCIL_BIG              ‚áê 23   #
  iCON_BRUSH_CLASSIC           ‚áê 24   #
  iCON_BRUSH_PAINTER           ‚áê 25   #
  iCON_WATER_DROP              ‚áê 26   #
  iCON_COLOR_PICKER            ‚áê 27   #
  iCON_RUBBER                  ‚áê 28   #
  iCON_COLOR_BUCKET            ‚áê 29   #
  iCON_TEXT_T                  ‚áê 30   #
  iCON_TEXT_A                  ‚áê 31   #
  iCON_SCALE                   ‚áê 32   #
  iCON_RESIZE                  ‚áê 33   #
  iCON_FILTER_POINT            ‚áê 34   #
  iCON_FILTER_BILINEAR         ‚áê 35   #
  iCON_CROP                    ‚áê 36   #
  iCON_CROP_ALPHA              ‚áê 37   #
  iCON_SQUARE_TOGGLE           ‚áê 38   #
  iCON_SYMMETRY                ‚áê 39   #
  iCON_SYMMETRY_HORIZONTAL     ‚áê 40   #
  iCON_SYMMETRY_VERTICAL       ‚áê 41   #
  iCON_LENS                    ‚áê 42   #
  iCON_LENS_BIG                ‚áê 43   #
  iCON_EYE_ON                  ‚áê 44   #
  iCON_EYE_OFF                 ‚áê 45   #
  iCON_FILTER_TOP              ‚áê 46   #
  iCON_FILTER                  ‚áê 47   #
  iCON_TARGET_POINT            ‚áê 48   #
  iCON_TARGET_SMALL            ‚áê 49   #
  iCON_TARGET_BIG              ‚áê 50   #
  iCON_TARGET_MOVE             ‚áê 51   #
  iCON_CURSOR_MOVE             ‚áê 52   #
  iCON_CURSOR_SCALE            ‚áê 53   #
  iCON_CURSOR_SCALE_RIGHT      ‚áê 54   #
  iCON_CURSOR_SCALE_LEFT       ‚áê 55   #
  iCON_UNDO                    ‚áê 56   #
  iCON_REDO                    ‚áê 57   #
  iCON_REREDO                  ‚áê 58   #
  iCON_MUTATE                  ‚áê 59   #
  iCON_ROTATE                  ‚áê 60   #
  iCON_REPEAT                  ‚áê 61   #
  iCON_SHUFFLE                 ‚áê 62   #
  iCON_EMPTYBOX                ‚áê 63   #
  iCON_TARGET                  ‚áê 64   #
  iCON_TARGET_SMALL_FILL       ‚áê 65   #
  iCON_TARGET_BIG_FILL         ‚áê 66   #
  iCON_TARGET_MOVE_FILL        ‚áê 67   #
  iCON_CURSOR_MOVE_FILL        ‚áê 68   #
  iCON_CURSOR_SCALE_FILL       ‚áê 69   #
  iCON_CURSOR_SCALE_RIGHT_FILL ‚áê 70   #
  iCON_CURSOR_SCALE_LEFT_FILL  ‚áê 71   #
  iCON_UNDO_FILL               ‚áê 72   #
  iCON_REDO_FILL               ‚áê 73   #
  iCON_REREDO_FILL             ‚áê 74   #
  iCON_MUTATE_FILL             ‚áê 75   #
  iCON_ROTATE_FILL             ‚áê 76   #
  iCON_REPEAT_FILL             ‚áê 77   #
  iCON_SHUFFLE_FILL            ‚áê 78   #
  iCON_EMPTYBOX_SMALL          ‚áê 79   #
  iCON_BOX                     ‚áê 80   #
  iCON_BOX_TOP                 ‚áê 81   #
  iCON_BOX_TOP_RIGHT           ‚áê 82   #
  iCON_BOX_RIGHT               ‚áê 83   #
  iCON_BOX_BOTTOM_RIGHT        ‚áê 84   #
  iCON_BOX_BOTTOM              ‚áê 85   #
  iCON_BOX_BOTTOM_LEFT         ‚áê 86   #
  iCON_BOX_LEFT                ‚áê 87   #
  iCON_BOX_TOP_LEFT            ‚áê 88   #
  iCON_BOX_CENTER              ‚áê 89   #
  iCON_BOX_CIRCLE_MASK         ‚áê 90   #
  iCON_POT                     ‚áê 91   #
  iCON_ALPHA_MULTIPLY          ‚áê 92   #
  iCON_ALPHA_CLEAR             ‚áê 93   #
  iCON_DITHERING               ‚áê 94   #
  iCON_MIPMAPS                 ‚áê 95   #
  iCON_BOX_GRID                ‚áê 96   #
  iCON_GRID                    ‚áê 97   #
  iCON_BOX_CORNERS_SMALL       ‚áê 98   #
  iCON_BOX_CORNERS_BIG         ‚áê 99   #
  iCON_FOUR_BOXES              ‚áê 100  #
  iCON_GRID_FILL               ‚áê 101  #
  iCON_BOX_MULTISIZE           ‚áê 102  #
  iCON_ZOOM_SMALL              ‚áê 103  #
  iCON_ZOOM_MEDIUM             ‚áê 104  #
  iCON_ZOOM_BIG                ‚áê 105  #
  iCON_ZOOM_ALL                ‚áê 106  #
  iCON_ZOOM_CENTER             ‚áê 107  #
  iCON_BOX_DOTS_SMALL          ‚áê 108  #
  iCON_BOX_DOTS_BIG            ‚áê 109  #
  iCON_BOX_CONCENTRIC          ‚áê 110  #
  iCON_BOX_GRID_BIG            ‚áê 111  #
  iCON_OK_TICK                 ‚áê 112  #
  iCON_CROSS                   ‚áê 113  #
  iCON_ARROW_LEFT              ‚áê 114  #
  iCON_ARROW_RIGHT             ‚áê 115  #
  iCON_ARROW_DOWN              ‚áê 116  #
  iCON_ARROW_UP                ‚áê 117  #
  iCON_ARROW_LEFT_FILL         ‚áê 118  #
  iCON_ARROW_RIGHT_FILL        ‚áê 119  #
  iCON_ARROW_DOWN_FILL         ‚áê 120  #
  iCON_ARROW_UP_FILL           ‚áê 121  #
  iCON_AUDIO                   ‚áê 122  #
  iCON_FX                      ‚áê 123  #
  iCON_WAVE                    ‚áê 124  #
  iCON_WAVE_SINUS              ‚áê 125  #
  iCON_WAVE_SQUARE             ‚áê 126  #
  iCON_WAVE_TRIANGULAR         ‚áê 127  #
  iCON_CROSS_SMALL             ‚áê 128  #
  iCON_PLAYER_PREVIOUS         ‚áê 129  #
  iCON_PLAYER_PLAY_BACK        ‚áê 130  #
  iCON_PLAYER_PLAY             ‚áê 131  #
  iCON_PLAYER_PAUSE            ‚áê 132  #
  iCON_PLAYER_STOP             ‚áê 133  #
  iCON_PLAYER_NEXT             ‚áê 134  #
  iCON_PLAYER_RECORD           ‚áê 135  #
  iCON_MAGNET                  ‚áê 136  #
  iCON_LOCK_CLOSE              ‚áê 137  #
  iCON_LOCK_OPEN               ‚áê 138  #
  iCON_CLOCK                   ‚áê 139  #
  iCON_TOOLS                   ‚áê 140  #
  iCON_GEAR                    ‚áê 141  #
  iCON_GEAR_BIG                ‚áê 142  #
  iCON_BIN                     ‚áê 143  #
  iCON_HAND_POINTER            ‚áê 144  #
  iCON_LASER                   ‚áê 145  #
  iCON_COIN                    ‚áê 146  #
  iCON_EXPLOSION               ‚áê 147  #
  iCON_1UP                     ‚áê 148  #
  iCON_PLAYER                  ‚áê 149  #
  iCON_PLAYER_JUMP             ‚áê 150  #
  iCON_KEY                     ‚áê 151  #
  iCON_DEMON                   ‚áê 152  #
  iCON_TEXT_POPUP              ‚áê 153  #
  iCON_GEAR_EX                 ‚áê 154  #
  iCON_CRACK                   ‚áê 155  #
  iCON_CRACK_POINTS            ‚áê 156  #
  iCON_STAR                    ‚áê 157  #
  iCON_DOOR                    ‚áê 158  #
  iCON_EXIT                    ‚áê 159  #
  iCON_MODE_2D                 ‚áê 160  #
  iCON_MODE_3D                 ‚áê 161  #
  iCON_CUBE                    ‚áê 162  #
  iCON_CUBE_FACE_TOP           ‚áê 163  #
  iCON_CUBE_FACE_LEFT          ‚áê 164  #
  iCON_CUBE_FACE_FRONT         ‚áê 165  #
  iCON_CUBE_FACE_BOTTOM        ‚áê 166  #
  iCON_CUBE_FACE_RIGHT         ‚áê 167  #
  iCON_CUBE_FACE_BACK          ‚áê 168  #
  iCON_CAMERA                  ‚áê 169  #
  iCON_SPECIAL                 ‚áê 170  #
  iCON_LINK_NET                ‚áê 171  #
  iCON_LINK_BOXES              ‚áê 172  #
  iCON_LINK_MULTI              ‚áê 173  #
  iCON_LINK                    ‚áê 174  #
  iCON_LINK_BROKE              ‚áê 175  #
  iCON_TEXT_NOTES              ‚áê 176  #
  iCON_NOTEBOOK                ‚áê 177  #
  iCON_SUITCASE                ‚áê 178  #
  iCON_SUITCASE_ZIP            ‚áê 179  #
  iCON_MAILBOX                 ‚áê 180  #
  iCON_MONITOR                 ‚áê 181  #
  iCON_PRINTER                 ‚áê 182  #
  iCON_PHOTO_CAMERA            ‚áê 183  #
  iCON_PHOTO_CAMERA_FLASH      ‚áê 184  #
  iCON_HOUSE                   ‚áê 185  #
  iCON_HEART                   ‚áê 186  #
  iCON_CORNER                  ‚áê 187  #
  iCON_VERTICAL_BARS           ‚áê 188  #
  iCON_VERTICAL_BARS_FILL      ‚áê 189  #
  iCON_LIFE_BARS               ‚áê 190  #
  iCON_INFO                    ‚áê 191  #
  iCON_CROSSLINE               ‚áê 192  #
  iCON_HELP                    ‚áê 193  #
  iCON_FILETYPE_ALPHA          ‚áê 194  #
  iCON_FILETYPE_HOME           ‚áê 195  #
  iCON_LAYERS_VISIBLE          ‚áê 196  #
  iCON_LAYERS                  ‚áê 197  #
  iCON_WINDOW                  ‚áê 198  #
  iCON_HIDPI                   ‚áê 199  #
  iCON_FILETYPE_BINARY         ‚áê 200  #
  iCON_HEX                     ‚áê 201  #
  iCON_SHIELD                  ‚áê 202  #
  iCON_FILE_NEW                ‚áê 203  #
  iCON_FOLDER_ADD              ‚áê 204  #
  iCON_ALARM                   ‚áê 205  #
  iCON_CPU                     ‚áê 206  #
  iCON_ROM                     ‚áê 207  #
  iCON_STEP_OVER               ‚áê 208  #
  iCON_STEP_INTO               ‚áê 209  #
  iCON_STEP_OUT                ‚áê 210  #
  iCON_RESTART                 ‚áê 211  #
  iCON_BREAKPOINT_ON           ‚áê 212  #
  iCON_BREAKPOINT_OFF          ‚áê 213  #
  iCON_BURGER_MENU             ‚áê 214  #
  iCON_CASE_SENSITIVE          ‚áê 215  #
  iCON_REG_EXP                 ‚áê 216  #
  iCON_FOLDER                  ‚áê 217  #
  iCON_FILE                    ‚áê 218  #
  iCON_SAND_TIMER              ‚áê 219  #
  iCON_220                     ‚áê 220  #
  iCON_221                     ‚áê 221  #
  iCON_222                     ‚áê 222  #
  iCON_223                     ‚áê 223  #
  iCON_224                     ‚áê 224  #
  iCON_225                     ‚áê 225  #
  iCON_226                     ‚áê 226  #
  iCON_227                     ‚áê 227  #
  iCON_228                     ‚áê 228  #
  iCON_229                     ‚áê 229  #
  iCON_230                     ‚áê 230  #
  iCON_231                     ‚áê 231  #
  iCON_232                     ‚áê 232  #
  iCON_233                     ‚áê 233  #
  iCON_234                     ‚áê 234  #
  iCON_235                     ‚áê 235  #
  iCON_236                     ‚áê 236  #
  iCON_237                     ‚áê 237  #
  iCON_238                     ‚áê 238  #
  iCON_239                     ‚áê 239  #
  iCON_240                     ‚áê 240  #
  iCON_241                     ‚áê 241  #
  iCON_242                     ‚áê 242  #
  iCON_243                     ‚áê 243  #
  iCON_244                     ‚áê 244  #
  iCON_245                     ‚áê 245  #
  iCON_246                     ‚áê 246  #
  iCON_247                     ‚áê 247  #
  iCON_248                     ‚áê 248  #
  iCON_249                     ‚áê 249  #
  iCON_250                     ‚áê 250  #
  iCON_251                     ‚áê 251  #
  iCON_252                     ‚áê 252  #
  iCON_253                     ‚áê 253  #
  iCON_254                     ‚áê 254  #
  iCON_255                     ‚áê 255  #
}

v2 ‚áê ‚ü® # Vector2 type
  f # x  #
  f # y  #
‚ü©
v3 ‚áê ‚ü® # Vector3 type                 // -- ConvertHSVtoRGB(), ConvertRGBtoHSV()
  f # x  #
  f # y  #
  f # z  #
‚ü©
color ‚áê ‚ü® # Color type, RGBA (32bit)
  u8 # r  #
  u8 # g  #
  u8 # b  #
  u8 # a  #
‚ü©
rectangle ‚áê ‚ü® # Rectangle type
  f # x       #
  f # y       #
  f # width   #
  f # height  #
‚ü©
texture2D ‚áê ‚ü® # It should be redesigned to be provided by user
  u # id       # OpenGL texture id
  i # width    # Texture base width
  i # height   # Texture base height
  i # mipmaps  # Mipmap levels, 1 by default
  i # format   # Data format (PixelFormat type)
‚ü©
image ‚áê ‚ü® # Image, pixel data stored in CPU memory (RAM)
  ptr # data     # Image raw data
  i   # width    # Image base width
  i   # height   # Image base height
  i   # mipmaps  # Mipmap levels, 1 by default
  i   # format   # Data format (PixelFormat type)
‚ü©
glyphInfo ‚áê ‚ü® # GlyphInfo, font characters glyphs info
  i     # value     # Character value (Unicode)
  i     # offsetX   # Character offset X when drawing
  i     # offsetY   # Character offset Y when drawing
  i     # advanceX  # Character advance position X
  image # image     # Character image data
‚ü©
font ‚áê ‚ü® # It should be redesigned to be provided by user
  i             # baseSize      # Base size (default chars height)
  i             # glyphCount    # Number of glyph characters
  i             # glyphPadding  # Padding around the glyph characters
  texture2D     # texture       # Texture atlas containing the glyphs
  "*"‚àærectangle # recs          # Rectangles in texture for the glyphs
  "*"‚àæglyphInfo # glyphs        # Glyphs info data
‚ü©
guiStyleProp ‚áê ‚ü® # NOTE: Used when exporting style as code for convenience
  "u16" # controlId      # Control identifier
  "u16" # propertyId     # Property identifier
  i     # propertyValue  # Property value
‚ü©

guiEnable            ‚áê              "GuiEnable"           _R‚ü®‚ü©                                            #                                                                # Enable gui controls (global state)
guiDisable           ‚áê              "GuiDisable"          _R‚ü®‚ü©                                            #                                                                # Disable gui controls (global state)
guiLock              ‚áê              "GuiLock"             _R‚ü®‚ü©                                            #                                                                # Lock gui controls (global state)
guiUnlock            ‚áê              "GuiUnlock"           _R‚ü®‚ü©                                            #                                                                # Unlock gui controls (global state)
guiIsLocked          ‚áê bool         "GuiIsLocked"         _R‚ü®‚ü©                                            #                                                                # Check if gui is locked (global state)
guiSetAlpha          ‚áê              "GuiSetAlpha"         _R‚ü®f‚ü©                                           # alpha                                                          # Set gui controls alpha (global state), alpha goes from 0.0f to 1.0f
guiSetState          ‚áê              "GuiSetState"         _R‚ü®i‚ü©                                           # state                                                          # Set gui state (global state)
guiGetState          ‚áê i            "GuiGetState"         _R‚ü®‚ü©                                            #                                                                # Get gui state (global state)
guiSetFont           ‚áê              "GuiSetFont"          _R‚ü®font‚ü©                                        # font                                                           # Set gui custom font (global state)
guiGetFont           ‚áê font         "GuiGetFont"          _R‚ü®‚ü©                                            #                                                                # Get gui custom font (global state)
guiSetStyle          ‚áê              "GuiSetStyle"         _R‚ü®i‚ãÑi‚ãÑi‚ü©                                       # control property value                                         # Set one style property
guiGetStyle          ‚áê i            "GuiGetStyle"         _R‚ü®i‚ãÑi‚ü©                                         # control property                                               # Get one style property
guiLoadStyle         ‚áê              "GuiLoadStyle"        _R‚ü®str‚ü©                                         # fileName                                                       # Load style file over global style variable (.rgs)
guiLoadStyleDefault  ‚áê              "GuiLoadStyleDefault" _R‚ü®‚ü©                                            #                                                                # Load style default over global style
guiEnableTooltip     ‚áê              "GuiEnableTooltip"    _R‚ü®‚ü©                                            #                                                                # Enable gui tooltips (global state)
guiDisableTooltip    ‚áê              "GuiDisableTooltip"   _R‚ü®‚ü©                                            #                                                                # Disable gui tooltips (global state)
guiSetTooltip        ‚áê              "GuiSetTooltip"       _R‚ü®str‚ü©                                         # tooltip                                                        # Set tooltip string
guiIconText          ‚áê (ptr‚ä£str)    "GuiIconText"         _R‚ü®i‚ãÑstr‚ü©                                       # iconId text                                                    # Get text with icon id prepended (if supported)
guiSetIconScale      ‚áê              "GuiSetIconScale"     _R‚ü®i‚ü©                                           # scale                                                          # Set default icon drawing size
guiGetIcons          ‚áê ("*"‚àæu)      "GuiGetIcons"         _R‚ü®‚ü©                                            #                                                                # Get raygui icons data pointer
guiLoadIcons         ‚áê (ptr‚ä£"*"‚àæstr)"GuiLoadIcons"        _R‚ü®str‚ãÑbool‚ü©                                    # fileName loadIconsName                                         # Load raygui icons file (.rgi) into internal icons data
guiDrawIcon          ‚áê              "GuiDrawIcon"         _R‚ü®i‚ãÑi‚ãÑi‚ãÑi‚ãÑcolor‚ü©                               # iconId posX posY pixelSize color                               # Draw icon using pixel size at specified position
guiWindowBox         ‚áê i            "GuiWindowBox"        _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds title                                                   # Window Box control, shows a window that can be closed
guiGroupBox          ‚áê i            "GuiGroupBox"         _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Group Box control with text name
guiLine              ‚áê i            "GuiLine"             _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Line separator control, could contain text
guiPanel             ‚áê i            "GuiPanel"            _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Panel control, useful to group controls
guiTabBar            ‚áê i            "GuiTabBar"           _R‚ü®rectangle‚ãÑ"*"‚àæstr‚ãÑi‚ãÑ"*"‚àæi‚ü©                   # bounds text count active                                       # Tab Bar control, returns TAB to be closed or -1
guiTabBarRef         ‚áê i            "GuiTabBar"           _R‚ü®rectangle‚ãÑ"*"‚àæstr‚ãÑi‚ãÑ"&"‚àæi‚ü©                   # bounds text count active                                       # Tab Bar control, returns TAB to be closed or -1
guiScrollPanel       ‚áê i            "GuiScrollPanel"      _R‚ü®rectangle‚ãÑstr‚ãÑrectangle‚ãÑ"*"‚àæv2‚ãÑ"*"‚àærectangle‚ü©# bounds text content scroll view                                # Scroll Panel control
guiScrollPanelRef    ‚áê i            "GuiScrollPanel"      _R‚ü®rectangle‚ãÑstr‚ãÑrectangle‚ãÑ"&"‚àæv2‚ãÑ"&"‚àærectangle‚ü©# bounds text content scroll view                                # Scroll Panel control
guiLabel             ‚áê i            "GuiLabel"            _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Label control, shows text
guiButton            ‚áê i            "GuiButton"           _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Button control, returns true when clicked
guiLabelButton       ‚áê i            "GuiLabelButton"      _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Label button control, show true when clicked
guiToggle            ‚áê i            "GuiToggle"           _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæbool‚ü©                      # bounds text active                                             # Toggle Button control, returns true when active
guiToggleRef         ‚áê i            "GuiToggle"           _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæbool‚ü©                      # bounds text active                                             # Toggle Button control, returns true when active
guiToggleGroup       ‚áê i            "GuiToggleGroup"      _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ü©                         # bounds text active                                             # Toggle Group control, returns active toggle index
guiToggleGroupRef    ‚áê i            "GuiToggleGroup"      _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ü©                         # bounds text active                                             # Toggle Group control, returns active toggle index
guiToggleSlider      ‚áê i            "GuiToggleSlider"     _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ü©                         # bounds text active                                             # Toggle Slider control, returns true when clicked
guiToggleSliderRef   ‚áê i            "GuiToggleSlider"     _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ü©                         # bounds text active                                             # Toggle Slider control, returns true when clicked
guiCheckBox          ‚áê i            "GuiCheckBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæbool‚ü©                      # bounds text checked                                            # Check Box control, returns true when active
guiCheckBoxRef       ‚áê i            "GuiCheckBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæbool‚ü©                      # bounds text checked                                            # Check Box control, returns true when active
guiComboBox          ‚áê i            "GuiComboBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ü©                         # bounds text active                                             # Combo Box control, returns selected item index
guiComboBoxRef       ‚áê i            "GuiComboBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ü©                         # bounds text active                                             # Combo Box control, returns selected item index
guiDropdownBox       ‚áê i            "GuiDropdownBox"      _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ãÑbool‚ü©                    # bounds text active editMode                                    # Dropdown Box control, returns selected item
guiDropdownBoxRef    ‚áê i            "GuiDropdownBox"      _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ãÑbool‚ü©                    # bounds text active editMode                                    # Dropdown Box control, returns selected item
guiSpinner           ‚áê i            "GuiSpinner"          _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ãÑi‚ãÑi‚ãÑbool‚ü©                # bounds text value minValue maxValue editMode                   # Spinner control, returns selected value
guiSpinnerRef        ‚áê i            "GuiSpinner"          _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ãÑi‚ãÑi‚ãÑbool‚ü©                # bounds text value minValue maxValue editMode                   # Spinner control, returns selected value
guiValueBox          ‚áê i            "GuiValueBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ãÑi‚ãÑi‚ãÑbool‚ü©                # bounds text value minValue maxValue editMode                   # Value Box control, updates input text with numbers
guiValueBoxRef       ‚áê i            "GuiValueBox"         _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ãÑi‚ãÑi‚ãÑbool‚ü©                # bounds text value minValue maxValue editMode                   # Value Box control, updates input text with numbers
guiTextBox           ‚áê i            "GuiTextBox"          _R‚ü®rectangle‚ãÑstr‚ãÑi‚ãÑbool‚ü©                        # bounds text textSize editMode                                  # Text Box control, updates input text
guiTextBoxRef        ‚áê i            "GuiTextBox"          _R‚ü®rectangle‚ãÑ"&u8:c8"‚ãÑi‚ãÑbool‚ü©                   # bounds text textSize editMode                                  # Text Box control, updates input text
guiSlider            ‚áê i            "GuiSlider"           _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"*"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Slider control, returns selected value
guiSliderRef         ‚áê i            "GuiSlider"           _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"&"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Slider control, returns selected value
guiSliderBar         ‚áê i            "GuiSliderBar"        _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"*"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Slider Bar control, returns selected value
guiSliderBarRef      ‚áê i            "GuiSliderBar"        _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"&"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Slider Bar control, returns selected value
guiProgressBar       ‚áê i            "GuiProgressBar"      _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"*"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Progress Bar control, shows current progress value
guiProgressBarRef    ‚áê i            "GuiProgressBar"      _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑ"&"‚àæf‚ãÑf‚ãÑf‚ü©                 # bounds textLeft textRight value minValue maxValue              # Progress Bar control, shows current progress value
guiStatusBar         ‚áê i            "GuiStatusBar"        _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Status Bar control, shows info text
guiDummyRec          ‚áê i            "GuiDummyRec"         _R‚ü®rectangle‚ãÑstr‚ü©                               # bounds text                                                    # Dummy control for placeholders
guiGrid              ‚áê i            "GuiGrid"             _R‚ü®rectangle‚ãÑstr‚ãÑf‚ãÑi‚ãÑ"*"‚àæv2‚ü©                    # bounds text spacing subdivs mouseCell                          # Grid control, returns mouse cell position
guiGridRef           ‚áê i            "GuiGrid"             _R‚ü®rectangle‚ãÑstr‚ãÑf‚ãÑi‚ãÑ"&"‚àæv2‚ü©                    # bounds text spacing subdivs mouseCell                          # Grid control, returns mouse cell position
guiListView          ‚áê i            "GuiListView"         _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæi‚ãÑ"*"‚àæi‚ü©                   # bounds text scrollIndex active                                 # List View control, returns selected list item index
guiListViewRef       ‚áê i            "GuiListView"         _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæi‚ãÑ"&"‚àæi‚ü©                   # bounds text scrollIndex active                                 # List View control, returns selected list item index
guiListViewEx        ‚áê i            "GuiListViewEx"       _R‚ü®rectangle‚ãÑ"*"‚àæstr‚ãÑi‚ãÑ"*"‚àæi‚ãÑ"*"‚àæi‚ãÑ"*"‚àæi‚ü©       # bounds text count scrollIndex active focus                     # List View with extended parameters
guiListViewExRef     ‚áê i            "GuiListViewEx"       _R‚ü®rectangle‚ãÑ"*"‚àæstr‚ãÑi‚ãÑ"&"‚àæi‚ãÑ"&"‚àæi‚ãÑ"&"‚àæi‚ü©       # bounds text count scrollIndex active focus                     # List View with extended parameters
guiMessageBox        ‚áê i            "GuiMessageBox"       _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑstr‚ü©                       # bounds title message buttons                                   # Message Box control, displays a message
guiTextInputBox      ‚áê i            "GuiTextInputBox"     _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑstr‚ãÑstr‚ãÑi‚ãÑ"*"‚àæbool‚ü©        # bounds title message buttons text textMaxSize secretViewActive # Text Input Box control, ask for text, supports secret
guiTextInputBoxRef   ‚áê i            "GuiTextInputBox"     _R‚ü®rectangle‚ãÑstr‚ãÑstr‚ãÑstr‚ãÑ"&u8:c8"‚ãÑi‚ãÑ"&"‚àæbool‚ü©   # bounds title message buttons text textMaxSize secretViewActive # Text Input Box control, ask for text, supports secret
guiColorPicker       ‚áê i            "GuiColorPicker"      _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæcolor‚ü©                     # bounds text color                                              # Color Picker control (multiple color controls)
guiColorPickerRef    ‚áê i            "GuiColorPicker"      _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæcolor‚ü©                     # bounds text color                                              # Color Picker control (multiple color controls)
guiColorPanel        ‚áê i            "GuiColorPanel"       _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæcolor‚ü©                     # bounds text color                                              # Color Panel control
guiColorPanelRef     ‚áê i            "GuiColorPanel"       _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæcolor‚ü©                     # bounds text color                                              # Color Panel control
guiColorBarAlpha     ‚áê i            "GuiColorBarAlpha"    _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæf‚ü©                         # bounds text alpha                                              # Color Bar Alpha control
guiColorBarAlphaRef  ‚áê i            "GuiColorBarAlpha"    _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæf‚ü©                         # bounds text alpha                                              # Color Bar Alpha control
guiColorBarHue       ‚áê i            "GuiColorBarHue"      _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæf‚ü©                         # bounds text value                                              # Color Bar Hue control
guiColorBarHueRef    ‚áê i            "GuiColorBarHue"      _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæf‚ü©                         # bounds text value                                              # Color Bar Hue control
guiColorPickerHSV    ‚áê i            "GuiColorPickerHSV"   _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæv3‚ü©                        # bounds text colorHsv                                           # Color Picker control that avoids conversion to RGB on each call (multiple color controls)
guiColorPickerHSVRef ‚áê i            "GuiColorPickerHSV"   _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæv3‚ü©                        # bounds text colorHsv                                           # Color Picker control that avoids conversion to RGB on each call (multiple color controls)
guiColorPanelHSV     ‚áê i            "GuiColorPanelHSV"    _R‚ü®rectangle‚ãÑstr‚ãÑ"*"‚àæv3‚ü©                        # bounds text colorHsv                                           # Color Panel control that returns HSV color value, used by GuiColorPickerHSV()
guiColorPanelHSVRef  ‚áê i            "GuiColorPanelHSV"    _R‚ü®rectangle‚ãÑstr‚ãÑ"&"‚àæv3‚ü©                        # bounds text colorHsv                                           # Color Panel control that returns HSV color value, used by GuiColorPickerHSV()
